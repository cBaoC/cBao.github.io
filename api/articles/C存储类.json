{"title":"C存储类","uid":"8655ec3b78f346469051ac63e86fd947","slug":"C存储类","date":"2022-07-10T08:12:03.000Z","updated":"2022-07-10T10:02:07.536Z","comments":true,"path":"api/articles/C存储类.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/c.png","content":"<h1 id=\"C存储类\"><a href=\"#C存储类\" class=\"headerlink\" title=\"C存储类\"></a>C存储类</h1><div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>存储类定义 C 程序中变量/函数的范围（可见性）和生命周期。这些说明符放置在它们所修饰的类型之前</p>\n<p>C中四种存储类：</p>\n<ul>\n<li>auto</li>\n<li>register</li>\n<li>static</li>\n<li>extern</li>\n</ul>\n\n</div>\n<h1 id=\"auto-存储类\"><a href=\"#auto-存储类\" class=\"headerlink\" title=\"auto 存储类\"></a>auto 存储类</h1><p><strong>auto</strong> 存储类是所有<strong>局部变量默认</strong>的存储类</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//注意是在花括号里的局部变量,Age1和Age2是相同存储类</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">int</span> Age1\n\t<span class=\"token keyword\">auto</span> <span class=\"token keyword\">int</span> Age2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>auto只能修饰在函数内的局部变量</p>\n</p>\n</div>\n<h1 id=\"register-存储类\"><a href=\"#register-存储类\" class=\"headerlink\" title=\"register 存储类\"></a>register 存储类</h1><p><strong>register</strong> 存储类用于定义存储在<strong>寄存器</strong>中而不是 RAM 中的<strong>局部变量</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> Miles<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>寄存器只用于需要快速访问的变量，比如计数器</p>\n<p>不能对register修饰的变量使用取地址符”&amp;”，因为不在RAM中，所以没有内存地址</p>\n<p>定义 ‘register’ 并不意味着变量将被存储在寄存器中，它意味着变量可能存储在寄存器中，这取决于硬件和实现的限制</p>\n\n</div>\n<h1 id=\"static-存储类\"><a href=\"#static-存储类\" class=\"headerlink\" title=\"static 存储类\"></a>static 存储类</h1><p>作用于<strong>局部变量</strong>：</p>\n<ul>\n<li><strong>static</strong> 存储类指示编译器在<strong>程序的生命周期内</strong>保持局部变量的存在</li>\n<li>使用 static 修饰局部变量可以在函数调用之间<strong>保持局部变量</strong>的值</li>\n</ul>\n<p>作用于全局变量：</p>\n<ul>\n<li>当 static 修饰全局变量时，会使变量的作用域<strong>限制在声明它的文件内</strong></li>\n<li>全局声明的一个 static 变量或方法可以被任何函数或方法调用，只要这些方法出现在跟 static 变量或方法<strong>同一个</strong>文件</li>\n</ul>\n<h1 id=\"extern-存储类\"><a href=\"#extern-存储类\" class=\"headerlink\" title=\"extern 存储类\"></a>extern 存储类</h1><ul>\n<li><strong>extern</strong> 存储类用于提供一个<strong>全局变量的引用</strong>，全局变量对<strong>所有的程序文件</strong>都是可见的</li>\n<li>对于无法初始化的变量，会把变量名指向一个之前<strong>定义过</strong>的存储位置</li>\n<li>extern 修饰符通常用于当有两个或多个文件共享相同的全局变量或函数的时候</li>\n</ul>\n","text":"C存储类 注意 存储类定义 C 程序中变量/函数的范围（可见性）和生命周期。这些说明符放置在它们所修饰的类型之前 C中四种存储类： auto register static extern auto 存储类auto 存储类是所有局部变量默认的存储类 //注意是在花括号里的局部变量,...","link":"","photos":[],"count_time":{"symbolsCount":787,"symbolsTime":"1 mins."},"categories":[{"name":"C","slug":"C","count":3,"path":"api/categories/C.json"}],"tags":[{"name":"C","slug":"C","count":3,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">C存储类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#auto-%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">auto 存储类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#register-%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">register 存储类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#static-%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">static 存储类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#extern-%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">extern 存储类</span></a></li></ol>","author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"C++仿函数和代理","uid":"650e8b54c427468049a9eded7ddf3373","slug":"C++仿函数和代理","date":"2022-07-17T07:19:09.000Z","updated":"2022-07-17T07:47:09.174Z","comments":true,"path":"api/articles/C++仿函数和代理.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/C%2B%2B.png","text":"sjdks 仿函数 提示 需要头文件#include &lt; functional &gt; 仿函数与普通函数#include &lt;iostream> #include &lt;functional> int Test(int A, int B) &#123; std::c...","link":"","photos":[],"count_time":{"symbolsCount":565,"symbolsTime":"1 mins."},"categories":[{"name":"C++","slug":"C","count":1,"path":"api/categories/C.json"}],"tags":[{"name":"仿函数和代理","slug":"仿函数和代理","count":1,"path":"api/tags/仿函数和代理.json"}],"author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"C数据类型","uid":"91073ca00ced3eaf093ce066e8170e85","slug":"C数据类型","date":"2022-07-09T07:51:09.000Z","updated":"2022-07-10T08:06:32.868Z","comments":true,"path":"api/articles/C数据类型.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/c.png","text":"C数据类型 ","link":"","photos":[],"count_time":{"symbolsCount":6,"symbolsTime":"1 mins."},"categories":[{"name":"C","slug":"C","count":3,"path":"api/categories/C.json"}],"tags":[{"name":"C","slug":"C","count":3,"path":"api/tags/C.json"}],"author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}