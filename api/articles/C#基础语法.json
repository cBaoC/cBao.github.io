{"title":"C#基础语法","uid":"6d01cc0c05504e56df23f126932823fa","slug":"C#基础语法","date":"2022-09-06T14:02:58.000Z","updated":"2022-09-09T09:06:36.033Z","comments":true,"path":"api/articles/C#基础语法.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/CSharp.png","content":"<h1 id=\"C-基础语法\"><a href=\"#C-基础语法\" class=\"headerlink\" title=\"C#基础语法\"></a>C#基础语法</h1><h2 id=\"三种注释方法\"><a href=\"#三种注释方法\" class=\"headerlink\" title=\"三种注释方法\"></a>三种注释方法</h2><ul>\n<li>双斜杠注释（//）：用于注释一行信息</li>\n<li>星号注释（/**/）：用于注释多行信息</li>\n<li>三斜杠注释（///）：用于注释类，命名空间等</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>注释：Ctrl+K+C</p>\n<p>取消注释：Ctrl+K+U</p>\n</p>\n</div>\n<h2 id=\"控制台的输入和输出\"><a href=\"#控制台的输入和输出\" class=\"headerlink\" title=\"控制台的输入和输出\"></a>控制台的输入和输出</h2><table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">功能描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Console.Write();</td>\n<td align=\"center\">在控制台输出不会自动换行</td>\n</tr>\n<tr>\n<td align=\"center\">Console.WriteLine();</td>\n<td align=\"center\">在控制台输出会自动换行</td>\n</tr>\n<tr>\n<td align=\"center\">Console.ReadLine();</td>\n<td align=\"center\">等待用户输入一行，按回车键结束输入</td>\n</tr>\n<tr>\n<td align=\"center\">Console.ReadKey();</td>\n<td align=\"center\">只要用户按下任意键就结束</td>\n</tr>\n</tbody></table>\n<h2 id=\"折叠代码块\"><a href=\"#折叠代码块\" class=\"headerlink\" title=\"折叠代码块\"></a>折叠代码块</h2><pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;用于整理代码，方便阅读，只在编辑时有效\n#region cBaoTest\nConsole.WriteLine(&quot;折叠代码块\\n&quot;);\n#endregion<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"变量类型\"><a href=\"#变量类型\" class=\"headerlink\" title=\"变量类型\"></a>变量类型</h2><table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">范围</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">bool</td>\n<td align=\"center\">布尔值</td>\n<td align=\"center\">True 或 False</td>\n<td align=\"center\">False</td>\n</tr>\n<tr>\n<td align=\"left\">byte</td>\n<td align=\"center\">8 位无符号整数</td>\n<td align=\"center\">0 到 255</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"left\">char</td>\n<td align=\"center\">16 位 Unicode 字符</td>\n<td align=\"center\">U +0000 到 U +ffff</td>\n<td align=\"center\">‘\\0’</td>\n</tr>\n<tr>\n<td align=\"left\">decimal</td>\n<td align=\"center\">128 位精确的十进制值，28-29 有效位数</td>\n<td align=\"center\">(-7.9 x 1028 到 7.9 x 1028) / 100 到 28</td>\n<td align=\"center\">0.0M</td>\n</tr>\n<tr>\n<td align=\"left\">double</td>\n<td align=\"center\">64 位双精度浮点型</td>\n<td align=\"center\">(+/-)5.0 x 10-324 到 (+/-)1.7 x 10308</td>\n<td align=\"center\">0.0D</td>\n</tr>\n<tr>\n<td align=\"left\">float</td>\n<td align=\"center\">32 位单精度浮点型</td>\n<td align=\"center\">-3.4 x 1038 到 + 3.4 x 1038</td>\n<td align=\"center\">0.0F</td>\n</tr>\n<tr>\n<td align=\"left\">int</td>\n<td align=\"center\">32 位有符号整数类型</td>\n<td align=\"center\">-2,147,483,648 到 2,147,483,647</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"left\">long</td>\n<td align=\"center\">64 位有符号整数类型</td>\n<td align=\"center\">-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td>\n<td align=\"center\">0L</td>\n</tr>\n<tr>\n<td align=\"left\">sbyte</td>\n<td align=\"center\">8 位有符号整数类型</td>\n<td align=\"center\">-128 到 127</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"left\">short</td>\n<td align=\"center\">16 位有符号整数类型</td>\n<td align=\"center\">-32,768 到 32,767</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"left\">uint</td>\n<td align=\"center\">32 位无符号整数类型</td>\n<td align=\"center\">0 到 4,294,967,295</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"left\">ulong</td>\n<td align=\"center\">64 位无符号整数类型</td>\n<td align=\"center\">0 到 18,446,744,073,709,551,615</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"left\">ushort</td>\n<td align=\"center\">16 位无符号整数类型</td>\n<td align=\"center\">0 到 65,535</td>\n<td align=\"center\">0</td>\n</tr>\n</tbody></table>\n<h2 id=\"四种类型转换方式\"><a href=\"#四种类型转换方式\" class=\"headerlink\" title=\"四种类型转换方式\"></a>四种类型转换方式</h2><ul>\n<li><p>括号强转</p>\n<ul>\n<li>用于将大范围数转换成小范围数，不安全转换</li>\n<li>bool和string类型不支持该强转</li>\n</ul>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">int i&#x3D;10;\nsbyte s1&#x3D;(sbyte)i;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>Parse转换</p>\n<ul>\n<li>将字符串转换为对应类型，安全转换</li>\n</ul>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">int TestInt &#x3D; int.Parse(&quot;1234&quot;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>Convert转换</p>\n<ul>\n<li>各个类型之间的转换</li>\n</ul>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">float f1 &#x3D; 3.4f;\nint i &#x3D; Convert.ToInt32(f1);\nConsole.WriteLine(i);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li><p>ToString转换</p>\n<ul>\n<li>其它类型转成string类型</li>\n</ul>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">float f1 &#x3D; 3.4f;\nstring s1 &#x3D; f1.ToString();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"异常捕获\"><a href=\"#异常捕获\" class=\"headerlink\" title=\"异常捕获\"></a>异常捕获</h2><pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">string s1 &#x3D; &quot;请输入语文成绩:&quot;;\nwhile (true)\n&#123;\n    &#x2F;&#x2F;try尝试捕获错误\n    try\n    &#123;\n        Console.Write(s1);\n        YuWen &#x3D; int.Parse(Console.ReadLine());\n        break;\n    &#125;\n    &#x2F;&#x2F;若try中有错误将执行catch中代码\n    catch\n    &#123;\n        s1 &#x3D; &quot;输入不合法，请重新输入语文成绩:&quot;;\n        continue;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"字符串拼接方式\"><a href=\"#字符串拼接方式\" class=\"headerlink\" title=\"字符串拼接方式\"></a>字符串拼接方式</h2><ul>\n<li><p>使用+号</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;+号两边必须要有一个string类型\nstring s1&#x3D;&quot;&quot;;\ns1 +&#x3D;1+2+3;&#x2F;&#x2F;结果是6\ns1 +&#x3D;&quot; &quot;+1+2+3;&#x2F;&#x2F;结果是123，从第一个字符串类型之后都会自动调用ToString之后在进行拼接<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>使用string.Format()</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;拼接的内容用占位符代替，数字0~n\n&#x2F;&#x2F;内容不能少于占位符\nstring.Format(&quot;&#123;0&#125;,&#123;1&#125;&quot;, &quot;cBao&quot;, &quot;nice&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"位运算\"><a href=\"#位运算\" class=\"headerlink\" title=\"位运算\"></a>位运算</h2><ul>\n<li>二进制按位进行运算</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">位运算符</th>\n<th align=\"center\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">按位与 &amp;</td>\n<td align=\"center\">有0则0</td>\n</tr>\n<tr>\n<td align=\"center\">按位或 |</td>\n<td align=\"center\">有1则1</td>\n</tr>\n<tr>\n<td align=\"center\">按位异或 ^</td>\n<td align=\"center\">相同为0，不同为1</td>\n</tr>\n<tr>\n<td align=\"center\">按位取反 ~</td>\n<td align=\"center\">0变1，1变0</td>\n</tr>\n<tr>\n<td align=\"center\">左移 &lt;&lt;</td>\n<td align=\"center\">左移几位，右边加几个0</td>\n</tr>\n<tr>\n<td align=\"center\">右移 &gt;&gt;</td>\n<td align=\"center\">右移几位，右侧去掉几个数</td>\n</tr>\n</tbody></table>\n<h2 id=\"控制台控制方法\"><a href=\"#控制台控制方法\" class=\"headerlink\" title=\"控制台控制方法\"></a>控制台控制方法</h2><ul>\n<li><p>清空</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Console.Clear();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>设置窗口大小，屏幕缓冲区大小</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Console.SetWindowSize(100, 50);\nConsole.SetBufferSize(100, 50);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<ol>\n<li>先设置窗口大小，在设置屏幕缓冲区大小</li>\n<li>屏幕缓冲区大小不能小于窗口大小</li>\n<li>窗口大小不能大于控制台最大尺寸</li>\n</ol>\n\n</div>\n</li>\n<li><p>设置光标位置</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Console.SetCursorPosition(10, 5);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>x和y的单位不同，1y=2x 视觉上</p>\n</p>\n</div>\n</li>\n<li><p>控制台颜色</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;文字颜色\nConsole.ForegroundColor &#x3D; ConsoleColor.Red;\n&#x2F;&#x2F;背景颜色\n Console.BackgroundColor &#x3D; ConsoleColor.Blue;\n Console.Clear();&#x2F;&#x2F;设置背景颜色后必须用Clear一次<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>光标显示隐藏</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Console.CursorVisible &#x3D; true;\nConsole.CursorVisible &#x3D; false;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>关闭控制台</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Environment.Exit(0);&#x2F;&#x2F;在调试状态下无效<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"随机数\"><a href=\"#随机数\" class=\"headerlink\" title=\"随机数\"></a>随机数</h2><ul>\n<li><p>固定写法</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\"> &#x2F;&#x2F;创建随机数对象\n Random r &#x3D; new Random();\n &#x2F;&#x2F;0~99的随机数\n int i &#x3D; r.Next(100);\n Console.WriteLine(i);\n\n &#x2F;&#x2F;生成一个大于0的随机数\n int i2 &#x3D; r.Next();\n Console.WriteLine(i2);\n\n&#x2F;&#x2F;生成一个大于等于8小于13的一个随机数\n int i3 &#x3D; r.Next(8, 13);\n Console.WriteLine(i3);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><ul>\n<li><p>数组的声明方式</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;第一种\nint[] Arr;\n\n&#x2F;&#x2F;第二种\nint[] Arr_2 &#x3D; new int[5];\n\n&#x2F;&#x2F;第三种\nint[] Arr_3 &#x3D; new int[5] &#123; 1, 2, 3, 4, 5 &#125;;\n\n&#x2F;&#x2F;第四种\nint[] Arr_4 &#x3D; new int[] &#123; 1, 2, 3, 4, 5, 6 &#125;;\n\n&#x2F;&#x2F;第五种\nint[] Arr_5 &#x3D; &#123; 1, 2, 3, 4, 5 &#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>二维数组</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;声明一个2行3列的二维数组\nint[,] Arr &#x3D; new int[2, 3];\n&#x2F;&#x2F;获得行数\nint x&#x3D;Arr.GetLength(0);\n&#x2F;&#x2F;获得列数\nint y&#x3D;Arr.GetLength(1);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>值类型：基本变量类型，结构体，存储在栈空间，由计算机管理（它变我不变）</p>\n<p>引用类型：string（特殊，更像值类型）,数组，类，存储在堆空间，由程序员进行管理（它变我也变除了string）</p>\n\n</div>\n","feature":true,"text":"C#基础语法三种注释方法 双斜杠注释（//）：用于注释一行信息 星号注释（/**/）：用于注释多行信息 三斜杠注释（///）：用于注释类，命名空间等 提示 注释：Ctrl+K+C 取消注释：Ctrl+K+U 控制台的输入和输出 API 功能描述 Console.Write(); ...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"C#","slug":"C","count":1,"path":"api/categories/C.json"}],"tags":[{"name":"C#","slug":"C","count":1,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">C#基础语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%A7%8D%E6%B3%A8%E9%87%8A%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">三种注释方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E8%BE%93%E5%85%A5%E5%92%8C%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">控制台的输入和输出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%98%E5%8F%A0%E4%BB%A3%E7%A0%81%E5%9D%97\"><span class=\"toc-text\">折叠代码块</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">变量类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E7%A7%8D%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">四种类型转换方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7\"><span class=\"toc-text\">异常捕获</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">字符串拼接方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">位运算</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">控制台控制方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9A%8F%E6%9C%BA%E6%95%B0\"><span class=\"toc-text\">随机数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a></li></ol></li></ol>","author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"UE中的网络同步RPC","uid":"321e20a64de3485e0958a3f7db00142f","slug":"UE中的网络同步RPC","date":"2022-08-15T07:32:03.000Z","updated":"2022-08-17T15:26:40.262Z","comments":true,"path":"api/articles/UE中的网络同步RPC.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/UE5LOGO.png","text":"UE网络中的服务器在哪！ 在UE中存在服务器和客户端重合，创建房间的客户端同时具备服务器特性 UE中服务器和客户端中对象的关系 在服务器端，所有的角色（Actor）都是Authority（权威的） 在客户端眼，除了自己控制的角色外，其他的所有角色都是Simulated proxy...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":4,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"网络同步RPC","slug":"网络同步RPC","count":1,"path":"api/tags/网络同步RPC.json"}],"author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}