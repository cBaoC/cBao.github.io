{"title":"Unity3D引擎","uid":"2d7fcd3211374fac141da523879cb012","slug":"Unity3D引擎","date":"2022-09-22T15:48:50.000Z","updated":"2022-10-12T09:57:20.794Z","comments":true,"path":"api/articles/Unity3D引擎.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/UnityLogo.png","content":"<h2 id=\"场景中的对象\"><a href=\"#场景中的对象\" class=\"headerlink\" title=\"场景中的对象\"></a>场景中的对象</h2><ul>\n<li>GameObject类对象是Unity引擎提供作为场景中所有对象的根本</li>\n</ul>\n<h2 id=\"Unity中脚本的基本规则\"><a href=\"#Unity中脚本的基本规则\" class=\"headerlink\" title=\"Unity中脚本的基本规则\"></a>Unity中脚本的基本规则</h2><ul>\n<li>创建规则<ul>\n<li>不在VS中创建脚本</li>\n<li>可以放在Assets文件夹下的任意位置（建议同一文件夹下）</li>\n<li>类名和文件名必须一致，不然不能挂载（因为反射机制创建对象，会通过文件名去找Type） <strong>重要</strong></li>\n<li>不要使用中文命名</li>\n<li>没有特殊需求，不需要管命名空间</li>\n<li>创建的脚本默认继承MonoBehaviour</li>\n</ul>\n</li>\n<li>MonoBehavior基类<ul>\n<li>创建的脚本默认继承MonoBehaviour，继承该类才能挂载到GameObject上</li>\n<li>继承了MonoBehaviour的脚本不能new只能挂载！！！</li>\n<li>继承了MonoBehaviour的脚本不要写构造函数（也可以写，会自动调用），因为不能new，构造函数无意义</li>\n<li>继承了MonoBehaviour的脚本可以在一个对象上挂多个（没有添加DisallowMultipleComponent特性时）</li>\n<li>继承MonoBehaviour的类也可以再次被继承，遵循面向对象继承多态原则</li>\n</ul>\n</li>\n<li>不继承MonoBehaviour的类<ul>\n<li>不继承MonoBehaviour的类不能挂载到GameObject对象上</li>\n<li>不继承MonoBehaviour的类 想怎么写就怎么写 如果要使用 需要自己new实例化一个对象</li>\n<li>不继承MonoBehaviour的类 一般是单例模式的类（用于管理模块）或者数据结构类（用于存储数据）</li>\n<li>不继承MonoBehaviour的类 不用保留默认出现的几个函数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在Unity中打印信息的两种方式\"><a href=\"#在Unity中打印信息的两种方式\" class=\"headerlink\" title=\"在Unity中打印信息的两种方式\"></a>在Unity中打印信息的两种方式</h2><ul>\n<li><p>没有继承MonoBehaviour类</p>\n<table>\n<thead>\n<tr>\n<th>API</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Debug.Log(“…”);</td>\n</tr>\n<tr>\n<td>Debug.LogError(“出错”);</td>\n</tr>\n<tr>\n<td>Debug.LogWarning(“警告”);</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>继承了MonoBehaviour类</p>\n<table>\n<thead>\n<tr>\n<th>API</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>print(“…”);</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h2 id=\"生命周期函数\"><a href=\"#生命周期函数\" class=\"headerlink\" title=\"生命周期函数\"></a>生命周期函数</h2><ul>\n<li><p>所有继承MonoBehaviour的脚本，最终都会挂载到GameObject游戏对象上</p>\n</li>\n<li><p>生命周期函数就是该脚本对象依附的GameObject对象从出生到消亡的整个生命周期上</p>\n</li>\n<li><p>会通过反射自动调用的一些特殊函数，是Unity自己调用的</p>\n</li>\n<li><p>生命周期函数的访问修饰符一般为private和protected，因为不需要在外部自己调用生命周期函数</p>\n</li>\n<li><p>生命周期函数并不是基类中的成员</p>\n</li>\n<li><p>常用的生命周期函数（从上到下的执行先后）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Awake</td>\n<td align=\"center\">当脚本对象创建时，自动调用，类似构造函数，一个对象只会调用一次</td>\n</tr>\n<tr>\n<td align=\"center\">OnEnable</td>\n<td align=\"center\">依附的GameObject对象每次激活时调用</td>\n</tr>\n<tr>\n<td align=\"center\">Start</td>\n<td align=\"center\">当脚本对象创建后，第一次帧更新之前调用，一个对象只会调用一次（比Awake要晚）</td>\n</tr>\n<tr>\n<td align=\"center\">FixedUpdate</td>\n<td align=\"center\">物理帧更新，固定间隔时间执行，间隔时间可以设置（project Setting -&gt; Time）</td>\n</tr>\n<tr>\n<td align=\"center\">Update</td>\n<td align=\"center\">逻辑帧更新每帧执行</td>\n</tr>\n<tr>\n<td align=\"center\">LateUpdate</td>\n<td align=\"center\">每帧执行，于Update之后执行（一般用来处理摄像机位置更新（防止渲染出错））</td>\n</tr>\n<tr>\n<td align=\"center\">OnDisable</td>\n<td align=\"center\">依附的GameObject对象每次失活时调用</td>\n</tr>\n<tr>\n<td align=\"center\">OnDestroy</td>\n<td align=\"center\">对象销毁时调用，依附的GameObject对象被删除时</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/img/Unity%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0.PNG\" alt=\"Unity生命周期函数\"></p>\n</li>\n<li><p>生命周期函数支持继承多态</p>\n</li>\n</ul>\n<h2 id=\"Inspector窗口可编辑的变量\"><a href=\"#Inspector窗口可编辑的变量\" class=\"headerlink\" title=\"Inspector窗口可编辑的变量\"></a>Inspector窗口可编辑的变量</h2><ul>\n<li>Inspector显示的可编辑内容就是脚本的公共成员变量，默认情况下私有和保护的无法显示编辑</li>\n<li>加上强制序列化字段特性[SerializeField]，可以让私有的和保护的成员也可以被显示编辑</li>\n<li>在公共成员变量前加上[HideInInspector]，可以让公共成员变量在Inspector隐藏，默认是显示的</li>\n<li>大部分类型都能显示编辑<ul>\n<li>自定义类型和Dictionary类型不能显示编辑</li>\n</ul>\n</li>\n<li>加上序列化特性[System.Serializable]可以让自定义类型和结构体可以被显示编辑</li>\n<li>一些辅助特性<ul>\n<li>分组：[Header(“分组说明”)]</li>\n<li>悬停注释：[Tooltip(“说明内容”)]</li>\n<li>间隔特性：[Space()]</li>\n<li>修饰数值的滑条范围Range：[Range(最小值,最大值)]</li>\n<li>多行显示字符串，默认不写参数显示3行：[Multiline()]</li>\n<li>滚动条显示字符串，默认不写参数超过3行显示滚动条：[TextArea(3,4)]最少显示3行，最多显示4行，超过4行显示滚动条</li>\n<li>为变量添加快捷方法：[ContextMenuItem(“显示按钮名”,”方法名”)]，方法名不能有参数</li>\n<li>为方法添加特性能够在Inspector中执行：[ContextMenu(“测试函数”)]</li>\n</ul>\n</li>\n<li>注意<ul>\n<li>Inspector窗口中的变量关联的就是对象的成员变量，运行时改变它们就是在改变成员变量</li>\n<li>拖拽到GameObject对象后，再改变脚本中的变量默认值 界面上不会改变</li>\n<li>运行中修改的信息不会被保存</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MonoBehaviour中的重要内容\"><a href=\"#MonoBehaviour中的重要内容\" class=\"headerlink\" title=\"MonoBehaviour中的重要内容\"></a>MonoBehaviour中的重要内容</h2><ul>\n<li><p>重要成员</p>\n<ul>\n<li><p>获取依附的GameObject</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//gameObject与上面一样</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>获取依附的GameObject位置信息</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span><span class=\"token comment\">//获得位置信息</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>eulerAngles<span class=\"token punctuation\">;</span><span class=\"token comment\">//获得欧拉角</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>lossyScale<span class=\"token punctuation\">;</span><span class=\"token comment\">//获得缩放大小</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span><span class=\"token comment\">//该方法与以上相同</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>设置脚本是否激活</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enable<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//失活</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enable<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//激活</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>重要方法</p>\n<ul>\n<li><p>得到依附对象上挂载的其它脚本</p>\n<ul>\n<li><p>根据脚本名获取，获取失败返回null</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"脚本名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//使用时用as进行转换使用</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>根据Type获取</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">脚本类型</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>根据泛型获取 建议使用泛型获取，不用二次转换  <strong>建议使用</strong></p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>脚本类型<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>得到自己挂载的多个脚本</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponents</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>脚本类型<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>也可以直接用List<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>得到子对象挂载的脚本（默认也会找自身是否挂载该脚本）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>脚本类型<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token operator\">/</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得单个</span>\n<span class=\"token comment\">//true子对象失活时也会查找，false子对象失活时不会查找</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentsInChildren</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>脚本类型<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token operator\">/</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得多个</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>得到父对象挂载得脚本（默认也会查找自身是否挂载该脚本）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentInParent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>脚本类型<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得单个</span>\n<span class=\"token comment\">//true子对象失活时也会查找，false子对象失活时不会查找</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentsInParent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>脚本类型<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//得多个</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>尝试获取脚本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">this.TryGetComponent&lt;脚本类型&gt;(out type);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"GameObject常用成员变量\"><a href=\"#GameObject常用成员变量\" class=\"headerlink\" title=\"GameObject常用成员变量\"></a>GameObject常用成员变量</h2><table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">this.gameObject.name</td>\n<td align=\"center\">名字</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.activeSelf</td>\n<td align=\"center\">是否激活</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.isStatic</td>\n<td align=\"center\">是否是静态</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.layer</td>\n<td align=\"center\">层级</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.tag</td>\n<td align=\"center\">标签</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.transform / this.transform</td>\n<td align=\"center\">transform</td>\n</tr>\n</tbody></table>\n<h2 id=\"GameObject常用静态方法\"><a href=\"#GameObject常用静态方法\" class=\"headerlink\" title=\"GameObject常用静态方法\"></a>GameObject常用静态方法</h2><table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">GameObject.CreatePrimitive()</td>\n<td align=\"center\">创建自带几何体，会返回一个GameObject对象</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.Find()</td>\n<td align=\"center\">通过名字查找对象，效率较低，找不到失活对象，有相同名字的对象时，随机查找其中一个</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.FindWithTag()</td>\n<td align=\"center\">通过标签查找对象，找不到失活对象，有相同标签的对象时，随机查找其中一个</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.FindGameObjectWithTag()</td>\n<td align=\"center\">通过标签查找对象,与上一个API功能相同</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.FindGameObjectsWithTag()</td>\n<td align=\"center\">查找多个对象只能tag去找，无法通过名字 ，找不到失活对象</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.FindObjectOfType&lt;脚本类型&gt;()</td>\n<td align=\"center\">找到场景中挂载的某一个脚本对象，基本不使用，效率低下</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.instantiate()</td>\n<td align=\"center\">实例化对象，动态创建对象（名字后会增加clone）</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.Destroy()</td>\n<td align=\"center\">删除对象或者脚本，一般情况下会在下一帧移除对象并从内存中移除，第二个参数代表延迟删除的时间</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.DestroyImmediate()</td>\n<td align=\"center\">立即删除，不会等到下一帧，没有特殊需求不使用，可能存在卡顿</td>\n</tr>\n<tr>\n<td align=\"center\">GameObject.DontDestroyOnLoad()</td>\n<td align=\"center\">对象过场景不被移除（Unity默认过场景时场景中的对象都会自动删除掉）</td>\n</tr>\n</tbody></table>\n<h2 id=\"GameObject常用的成员方法\"><a href=\"#GameObject常用的成员方法\" class=\"headerlink\" title=\"GameObject常用的成员方法\"></a>GameObject常用的成员方法</h2><table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">new GameObject()</td>\n<td align=\"center\">创建一个空物体，存在重载，可以创建的同时添加脚本</td>\n</tr>\n<tr>\n<td align=\"center\">Obj.AddComponent&lt;脚本类型&gt;()</td>\n<td align=\"center\">为对象添加脚本</td>\n</tr>\n<tr>\n<td align=\"center\">Obj.SetActive()</td>\n<td align=\"center\">设置对象的激活和失活</td>\n</tr>\n<tr>\n<td align=\"center\">this.CompareTag()</td>\n<td align=\"center\">标签比较</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.SendMessage(“函数名”)</td>\n<td align=\"center\">执行挂载自身所有同名函数的行为 效率低下，不建议使用</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.BroadcastMessage(“函数名”)</td>\n<td align=\"center\">广播行为，让自己和自己子对象执行相同函数名的函数</td>\n</tr>\n<tr>\n<td align=\"center\">this.gameObject.SendMessageUpwards(“函数名”)</td>\n<td align=\"center\">向父对象和自己发送消息并执行相同函数名的函数</td>\n</tr>\n</tbody></table>\n<h2 id=\"Unity中的Object不是指的万物之父的object\"><a href=\"#Unity中的Object不是指的万物之父的object\" class=\"headerlink\" title=\"Unity中的Object不是指的万物之父的object\"></a>Unity中的Object不是指的万物之父的object</h2><h2 id=\"Time\"><a href=\"#Time\" class=\"headerlink\" title=\"Time\"></a>Time</h2><ul>\n<li><p>主要用于游戏中参与位移，计时，时间暂停等</p>\n</li>\n<li><p>时间缩放比例</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//时间停止</span>\nTime<span class=\"token punctuation\">.</span>timeScale<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//恢复正常</span>\nTime<span class=\"token punctuation\">.</span>timeScale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//2倍速</span>\nTime<span class=\"token punctuation\">.</span>timeScale<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>帧间隔时间：最近的一帧用了多长时间，主要用来计算位移</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//受Scale影响</span>\nTime<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//不受Scale影响的帧间隔时间</span>\nTime<span class=\"token punctuation\">.</span>unscaledDeltaTime<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>游戏开始到现在的时间</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//受Scale影响</span>\nTime<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//受Scale影响</span>\nTime<span class=\"token punctuation\">.</span>unscaledTime<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>物理帧间隔时间 FixedUpdate</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//受Scale影响</span>\nTime<span class=\"token punctuation\">.</span>fixedDeltaTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//不受Scale影响</span>\nTime<span class=\"token punctuation\">.</span>fixedUnscaledDeltaTime<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>帧数</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//从开始到现在游戏跑了多少帧</span>\nTime<span class=\"token punctuation\">.</span>frameCount<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"Transform\"><a href=\"#Transform\" class=\"headerlink\" title=\"Transform\"></a>Transform</h2><ul>\n<li><p>Vector3</p>\n<ul>\n<li><p>主要用来表示三维坐标系中的一个点或者向量</p>\n</li>\n<li><p>常用</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Vector3.zero</td>\n<td align=\"center\">(0,0,0)</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.right</td>\n<td align=\"center\">(1,0,0) X轴正方向</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.left</td>\n<td align=\"center\">(-1,0,0)</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.forward</td>\n<td align=\"center\">(0,0,1) Z轴正方向为面朝向</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.back</td>\n<td align=\"center\">(0,0,-1)</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.up</td>\n<td align=\"center\">（0,1,0）Y轴正方向</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.down</td>\n<td align=\"center\">（0,-1,0）</td>\n</tr>\n<tr>\n<td align=\"center\">Vector3.Distance</td>\n<td align=\"center\">计算两个点之间的距离</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p>位置和位移</p>\n<ul>\n<li><p>相对世界坐标系</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>相对父对象</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>世界坐标和相对坐标相同时的两种情况</p>\n<ol>\n<li>父对象的坐标是世界坐标原点(0,0,0)</li>\n<li>对象没有父对象</li>\n</ol>\n</li>\n<li><p>位置的赋值不能单独改变x,y,z的值，只能整体改变</p>\n</li>\n<li><p>对象当前的各朝向</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">API</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">this.transform.forward</td>\n<td align=\"center\">当前对象正方向</td>\n</tr>\n<tr>\n<td align=\"center\">this.transform.back</td>\n<td align=\"center\">当前对象后方向</td>\n</tr>\n<tr>\n<td align=\"center\">this.transform.up</td>\n<td align=\"center\">当前对象上方向</td>\n</tr>\n<tr>\n<td align=\"center\">this.transform.down</td>\n<td align=\"center\">当前对象下方向</td>\n</tr>\n<tr>\n<td align=\"center\">this.transform.right</td>\n<td align=\"center\">当前对象右方向</td>\n</tr>\n<tr>\n<td align=\"center\">this.transform.left</td>\n<td align=\"center\">当前对象右左方向</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>位移</p>\n<ul>\n<li><p>公式：路程 = 方向 * 速度 * 时间 </p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//朝自身前方向移动</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>API 一般使用该方式位移</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//参数一：表示位移多少  路程=方向*速度*时间</span>\n<span class=\"token comment\">//参数二：表示相对坐标系 默认是localPosition</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//朝自己的正方向移动</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token operator\">*</span>Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">,</span> Space<span class=\"token punctuation\">.</span>World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//朝世界的正方向移动</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">,</span> Space<span class=\"token punctuation\">.</span>World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//朝自己的正方向移动</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">,</span> Space<span class=\"token punctuation\">.</span>Self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>角度和旋转</p>\n<ul>\n<li><p>自转 API</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//第一个参数：每一帧旋转的角度</span>\n<span class=\"token comment\">//第二个参数：相对坐标系 默认是自己的坐标系</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//重载方式</span>\n<span class=\"token comment\">//第一个参数：相对于哪个轴进行运动</span>\n<span class=\"token comment\">//第二个参数：转动的角度是多少</span>\n<span class=\"token comment\">//第三个参数：相对坐标系 默认是自己的坐标系</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">,</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>Space<span class=\"token punctuation\">.</span>Self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>相对于某个点进行旋转</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//第一个参数：相对于哪个点</span>\n<span class=\"token comment\">//第二个参数：相对于点的轴</span>\n<span class=\"token comment\">//第三个参数：转的度数 旋转速度*时间</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">RotateAround</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<div class=\"custom-quote danger\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 16H12\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">特别注意</p>\n<p><p>通过欧拉角(Obj.transform.eulerAngles)获得的角度，在代码上始终只能在0~360范围内</p>\n</p>\n</div>\n</li>\n<li><p>缩放和看向</p>\n<ul>\n<li><p>相对于世界坐标系，只能get不能set</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>lossyScale<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>相对于本地坐标系（父对象）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>看向：让一个对象面朝向某一个点或者对象</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">LookAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>父子关系</p>\n<ul>\n<li><p>获取和设置父对象</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//获取父对象</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//设置父对象</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>parent<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//将父对象设置成空</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">SetParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//与上方效果相同，该方法重载中可以保留世界坐标位置</span>\n\n<span class=\"token comment\">//抛妻弃子</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">DetachChildren</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>获得子对象</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//通过查找获得子对象</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube (5)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//该方法找不到孙子，失活对象也能找到</span>\n\n<span class=\"token comment\">//通过索引获得子对象</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">GetChild</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>儿子的操作</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//一个对象判断自己是不是另一个对象的儿子</span>\n<span class=\"token function\">IsChildOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//得到自己作为儿子的编号</span>\n<span class=\"token function\">GetSiblingIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//把自己设置为第一个儿子</span>\n<span class=\"token function\">SetAsFirstSibling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//把自己设置为最后一个儿子</span>\n<span class=\"token function\">SetAsLastSibling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//设置自己为指定为第几个儿子 超出范围会直接设置成最后一个子对象</span>\n<span class=\"token function\">SetSiblingIndex</span><span class=\"token punctuation\">(</span>Index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"坐标转换\"><a href=\"#坐标转换\" class=\"headerlink\" title=\"坐标转换\"></a>坐标转换</h2><ul>\n<li><p>世界坐标系的点 转换 为相对本地坐标系的点（受缩放影响）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">InverseTransformPoint</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>世界坐标系的方向 转换 为相对本地坐标系的方向（不受缩放影响）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">InverseTransformDirection</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>世界坐标系的方向 转换 为相对本地坐标系的方向（受缩放影响）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">InverseTransformVector</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>世界坐标系 转 本地坐标系 可以帮助我们大概判断一个相对位置</p>\n\n</div>\n</li>\n<li><p>本地坐标系的点 转换 为相对世界坐标系的点（受缩放影响）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">TransformPoint</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>本地坐标系的方向 转换 为相对世界坐标系的方向（不受缩放影响）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">TransformDirection</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>本地坐标系的方向 转换 为相对世界坐标系的方向（受缩放影响）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">TransformVector</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"输入Input\"><a href=\"#输入Input\" class=\"headerlink\" title=\"输入Input\"></a>输入Input</h2><ul>\n<li><p>输入相关内容肯定是写在Update中</p>\n</li>\n<li><p>鼠标在屏幕位置</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Input<span class=\"token punctuation\">.</span>mousePosition<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>屏幕坐标的原点在屏幕左下角，往右是x轴正方向，往上是Y轴正方向</li>\n<li>返回值是Vector3 只有x和y有效 z一直是0</li>\n</ul>\n</li>\n<li><p>检测鼠标输入</p>\n<ul>\n<li><p>鼠标按下</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标左键按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标右键按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标中键按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>鼠标抬起</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonUp</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标左键抬起\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonUp</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标右键抬起\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButtonUp</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标中键抬起\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>鼠标长按</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButton</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标左键长按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButton</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标右键长按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetMouseButton</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鼠标中键长按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>鼠标中键滚动</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Input<span class=\"token punctuation\">.</span>mouseScrollDelta<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-1往下滚动</span>\n<span class=\"token comment\">//0没有滚动</span>\n<span class=\"token comment\">//1往上滚动</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>检测键盘输入</p>\n<ul>\n<li><p>键盘按下</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//必须是小写</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Q按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>键盘抬起</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyUp</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W抬起\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//必须是小写</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyUp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Q抬起\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>键盘长按</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKey</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空格长按\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//是否有任意键或鼠标长按</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span>anyKey<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有键长按\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//是否有任意键或鼠标按下</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span>anyKeyDown<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有键按下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//这一帧的键盘输入</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span>inputString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>检测默认轴输入</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//返回float</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>在以下可以配置对应轴输入<br><img src=\"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/img/image-20221005204019434.png\" alt=\"image-20221005204019434\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"屏幕相关\"><a href=\"#屏幕相关\" class=\"headerlink\" title=\"屏幕相关\"></a>屏幕相关</h2><ul>\n<li><p>当前屏幕分辨率</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Screen<span class=\"token punctuation\">.</span>currentResolution<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>屏幕窗口当前宽高</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Screen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\nScreen<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>屏幕休眠模式</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Screen<span class=\"token punctuation\">.</span>sleepTimeout <span class=\"token operator\">=</span> SleepTimeout<span class=\"token punctuation\">.</span>NeverSleep<span class=\"token punctuation\">;</span><span class=\"token comment\">//永不熄屏</span>\nScreen<span class=\"token punctuation\">.</span>sleepTimeout <span class=\"token operator\">=</span> SleepTimeout<span class=\"token punctuation\">.</span>SystemSetting<span class=\"token punctuation\">;</span><span class=\"token comment\">//系统设置</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>运行时是否全屏模式</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Screen<span class=\"token punctuation\">.</span>fullScreen <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>窗口模式</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//独占全屏</span>\n Screen<span class=\"token punctuation\">.</span>fullScreenMode <span class=\"token operator\">=</span> FullScreenMode<span class=\"token punctuation\">.</span>ExclusiveFullScreen<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//全屏窗口</span>\nScreen<span class=\"token punctuation\">.</span>fullScreenMode <span class=\"token operator\">=</span> FullScreenMode<span class=\"token punctuation\">.</span>FullScreenWindow<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//最大化窗口</span>\nScreen<span class=\"token punctuation\">.</span>fullScreenMode <span class=\"token operator\">=</span> FullScreenMode<span class=\"token punctuation\">.</span>MaximizedWindow<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//窗口模式</span>\nScreen<span class=\"token punctuation\">.</span>fullScreenMode <span class=\"token operator\">=</span> FullScreenMode<span class=\"token punctuation\">.</span>Windowed<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>移动设备屏幕转向相关</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//允许自动旋转为左横向 Home键在左</span>\nScreen<span class=\"token punctuation\">.</span>autorotateToLandscapeLeft <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//允许自动旋转为右横向 Home键在右</span>\nScreen<span class=\"token punctuation\">.</span>autorotateToLandscapeRight <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//允许自动旋转为纵向 Home键在下</span>\nScreen<span class=\"token punctuation\">.</span>autorotateToPortrait <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//允许自动旋转到纵向倒着看 Home键在上</span>\nScreen<span class=\"token punctuation\">.</span>autorotateToPortraitUpsideDown <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//指定屏幕显示方向</span>\nScreen<span class=\"token punctuation\">.</span>orientation <span class=\"token operator\">=</span> ScreenOrientation<span class=\"token punctuation\">.</span>LandscapeLeft<span class=\"token punctuation\">;</span><span class=\"token comment\">//等等</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/img/image-20221005230502226.png\" alt=\"image-20221005230502226\"></p>\n</li>\n<li><p>设置分辨率（移动设备上一般不使用）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Screen<span class=\"token punctuation\">.</span><span class=\"token function\">SetResolution</span><span class=\"token punctuation\">(</span><span class=\"token number\">1920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1080</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"摄像机组件\"><a href=\"#摄像机组件\" class=\"headerlink\" title=\"摄像机组件\"></a>摄像机组件</h2><ul>\n<li><p>Clear Flags（如何清除背景）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Skybox</td>\n<td align=\"center\">天空盒</td>\n</tr>\n<tr>\n<td align=\"center\">Solid Color</td>\n<td align=\"center\">颜色填充</td>\n</tr>\n<tr>\n<td align=\"center\">Depth only</td>\n<td align=\"center\">只画该层，背景透明</td>\n</tr>\n<tr>\n<td align=\"center\">Don’t Clear</td>\n<td align=\"center\">不移除，覆盖渲染</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Culling Mask（选择性渲染部分层级）</p>\n</li>\n<li><p>Projection（透视模式）</p>\n</li>\n<li><p>Clipping Planes（裁剪平面距离 ）</p>\n</li>\n<li><p>Viewport Rect（视口范围，屏幕上将绘制该摄像机视图的位置，主要用于双摄像机游戏）</p>\n</li>\n<li><p>Depth（渲染顺序上的深度）</p>\n</li>\n<li><p>Target Texture（渲染纹理）</p>\n<ul>\n<li>把摄像机画面渲染到一张图上，主要用于制作小地图</li>\n<li>在Project右键创建Render Texture</li>\n</ul>\n</li>\n<li><p>Occlusion Culling（是否启用剔除遮挡）</p>\n</li>\n</ul>\n<h3 id=\"获取摄像机\"><a href=\"#获取摄像机\" class=\"headerlink\" title=\"获取摄像机\"></a>获取摄像机</h3><ul>\n<li><p>获取主摄像机</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//场景上必须有一个tag为MainCamera的摄像机</span>\nCamera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>获得摄像机的数量</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Camera<span class=\"token punctuation\">.</span>allCamerasCount<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>获得所有摄像机</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">Camera<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> cameras <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">.</span>allCameras<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>渲染委托相关函数</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//摄像机剔除前处理的委托函数</span>\nCamera<span class=\"token punctuation\">.</span>onPreCull <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//摄像机渲染前处理的委托</span>\nCamera<span class=\"token punctuation\">.</span>onPreRender <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//摄像机渲染后处理的委托</span>\nCamera<span class=\"token punctuation\">.</span>onPostRender <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">&#123;</span>\n\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>界面上的参数 都可以在Camera中获取到</p>\n</li>\n<li><p>世界坐标转到屏幕坐标（x和y对应屏幕坐标，z对应摄像机与该点的距离）</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token function\">WorldToScreenPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>屏幕坐标转世界坐标</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//z轴很重要</span>\n<span class=\"token class-name\">Vector3</span> v <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span>mousePosition<span class=\"token punctuation\">;</span>\nv<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token function\">ScreenToWorldPoint</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"光源组件\"><a href=\"#光源组件\" class=\"headerlink\" title=\"光源组件\"></a>光源组件</h2><ul>\n<li><p>Type：光源类型</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Spot</td>\n<td align=\"center\">聚光灯</td>\n</tr>\n<tr>\n<td align=\"center\">Directional</td>\n<td align=\"center\">平行光</td>\n</tr>\n<tr>\n<td align=\"center\">Point</td>\n<td align=\"center\">点光源</td>\n</tr>\n<tr>\n<td align=\"center\">Area</td>\n<td align=\"center\">面光源（烘焙状态下有效）</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Color：颜色</p>\n</li>\n<li><p>Mode：光源模式</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Realtime</td>\n<td align=\"center\">实时光源，每帧实时计算，效果好，性能消耗大</td>\n</tr>\n<tr>\n<td align=\"center\">Baked</td>\n<td align=\"center\">红背光源，预先计算好，无法动态改变</td>\n</tr>\n<tr>\n<td align=\"center\">Mixed</td>\n<td align=\"center\">混合光源，预先计算+实时运算</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Intensity：光源强度</p>\n</li>\n<li><p>Indirect Multiplier：间接光  改变间接光的强度，低于1每次反弹会使光更暗，大于1每次反弹会使光更亮</p>\n</li>\n<li><p>Shadow Type：阴影类型</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">NoShadows</td>\n<td align=\"center\">关闭阴影</td>\n</tr>\n<tr>\n<td align=\"center\">HardShadows</td>\n<td align=\"center\">硬阴影</td>\n</tr>\n<tr>\n<td align=\"center\">SoftShadows</td>\n<td align=\"center\">柔阴影</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>RealtimeShadows</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">类型</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Strength</td>\n<td align=\"center\">阴影暗度0~1之间，越大越黑</td>\n</tr>\n<tr>\n<td align=\"center\">Resolution</td>\n<td align=\"center\">阴影贴图渲染分辨率，越大越逼真，消耗也越高</td>\n</tr>\n<tr>\n<td align=\"center\">Bias</td>\n<td align=\"center\">阴影推离光源的距离</td>\n</tr>\n<tr>\n<td align=\"center\">Normal Bias</td>\n<td align=\"center\">阴影投射面沿法线收缩距离</td>\n</tr>\n<tr>\n<td align=\"center\">Near Panel</td>\n<td align=\"center\">渲染阴影的近裁截面</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Cookie：投影遮罩</p>\n</li>\n<li><p>Cookie Size：投影遮罩大小</p>\n</li>\n<li><p>Draw Halo：光晕开关</p>\n</li>\n<li><p>Flare：耀斑（摄像机上需要加上Flare Layer脚本才能在Game窗口显示耀斑）</p>\n</li>\n<li><p>RenderMode：渲染模式</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Auto</td>\n<td align=\"center\">运行时确定</td>\n</tr>\n<tr>\n<td align=\"center\">Important</td>\n<td align=\"center\">以像素质量单位进行渲染，效果好，消耗大</td>\n</tr>\n<tr>\n<td align=\"center\">Not Important</td>\n<td align=\"center\">以快速模式进行渲染</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Culling Mask：剔除遮罩层，决定哪些层的对象受到该光源影响</p>\n</li>\n</ul>\n<h2 id=\"光面板\"><a href=\"#光面板\" class=\"headerlink\" title=\"光面板\"></a>光面板</h2><ul>\n<li>打开方式：Windows-&gt;Rendering-&gt;Lighting</li>\n</ul>\n<h2 id=\"物理系统之碰撞检测\"><a href=\"#物理系统之碰撞检测\" class=\"headerlink\" title=\"物理系统之碰撞检测\"></a>物理系统之碰撞检测</h2><ul>\n<li>刚体组件：RigidBody<ul>\n<li>产生碰撞的必要条件：两个物体必须要有 <strong>碰撞器</strong> ，其中至少有一个带有刚体</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/img/%E5%88%9A%E4%BD%93%E5%8F%82%E6%95%B01.png\" alt=\"刚体参数1\"></p>\n<p><img src=\"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/img/%E5%88%9A%E4%BD%93%E5%8F%82%E6%95%B03.png\" alt=\"刚体参数3\"></p>\n<ul>\n<li><p>碰撞函数</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//开始碰撞时执行的函数</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCollisionEnter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collision</span> collision<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span>\n  \n<span class=\"token comment\">//碰撞结束时执行的函数</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCollisionExit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collision</span> collision<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span>\n  \n<span class=\"token comment\">//两个物体互相接触时，会一直调用</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCollisionStay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collision</span> collision<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>触发函数</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//触发开始时执行的函数</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnTriggerEnter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collider</span> other<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span>\n  \n<span class=\"token comment\">//触发结束时执行的函数</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnTriggerExit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collider</span> other<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span>\n  \n<span class=\"token comment\">//重叠时，会一直调用</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnTriggerStay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collider</span> other<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n","text":"场景中的对象 GameObject类对象是Unity引擎提供作为场景中所有对象的根本 Unity中脚本的基本规则 创建规则 不在VS中创建脚本 可以放在Assets文件夹下的任意位置（建议同一文件夹下） 类名和文件名必须一致，不然不能挂载（因为反射机制创建对象，会通过文件名去找T...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Unity3D引擎","slug":"Unity3D引擎","count":3,"path":"api/categories/Unity3D引擎.json"}],"tags":[{"name":"Unity3D引擎","slug":"Unity3D引擎","count":1,"path":"api/tags/Unity3D引擎.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">场景中的对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Unity%E4%B8%AD%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A7%84%E5%88%99\"><span class=\"toc-text\">Unity中脚本的基本规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8Unity%E4%B8%AD%E6%89%93%E5%8D%B0%E4%BF%A1%E6%81%AF%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">在Unity中打印信息的两种方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">生命周期函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Inspector%E7%AA%97%E5%8F%A3%E5%8F%AF%E7%BC%96%E8%BE%91%E7%9A%84%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">Inspector窗口可编辑的变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MonoBehaviour%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">MonoBehaviour中的重要内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GameObject%E5%B8%B8%E7%94%A8%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">GameObject常用成员变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GameObject%E5%B8%B8%E7%94%A8%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">GameObject常用静态方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GameObject%E5%B8%B8%E7%94%A8%E7%9A%84%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">GameObject常用的成员方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Unity%E4%B8%AD%E7%9A%84Object%E4%B8%8D%E6%98%AF%E6%8C%87%E7%9A%84%E4%B8%87%E7%89%A9%E4%B9%8B%E7%88%B6%E7%9A%84object\"><span class=\"toc-text\">Unity中的Object不是指的万物之父的object</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Time\"><span class=\"toc-text\">Time</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Transform\"><span class=\"toc-text\">Transform</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">坐标转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5Input\"><span class=\"toc-text\">输入Input</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B1%8F%E5%B9%95%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">屏幕相关</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%91%84%E5%83%8F%E6%9C%BA%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">摄像机组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%91%84%E5%83%8F%E6%9C%BA\"><span class=\"toc-text\">获取摄像机</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%89%E6%BA%90%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">光源组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%89%E9%9D%A2%E6%9D%BF\"><span class=\"toc-text\">光面板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B9%8B%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">物理系统之碰撞检测</span></a></li></ol>","author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"UEC++基础","uid":"74d1a6628a5df30cefe103fae4a073dc","slug":"UEC++基础","date":"2023-02-02T06:19:47.000Z","updated":"2023-02-06T10:05:55.868Z","comments":true,"path":"api/articles/UEC++基础.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/UE5LOGO.png","text":"五个最常见的基类UObjectUObject类提供的功能 Garbage collection 垃圾回收(GC) 原生C++中的内存管理由程序员完成 虚幻引擎提供两种垃圾回收的解决方案 继承自UObject类，同时指向UObject类实例对象的指针成员变量用 UPROPERTY宏...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":5,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UEC++","slug":"UEC","count":1,"path":"api/tags/UEC.json"}],"author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"UE中的网络同步RPC","uid":"321e20a64de3485e0958a3f7db00142f","slug":"UE中的网络同步RPC","date":"2022-08-15T07:32:03.000Z","updated":"2022-08-17T15:26:40.262Z","comments":true,"path":"api/articles/UE中的网络同步RPC.json","keywords":null,"cover":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/UE5LOGO.png","text":"UE网络中的服务器在哪！ 在UE中存在服务器和客户端重合，创建房间的客户端同时具备服务器特性 UE中服务器和客户端中对象的关系 在服务器端，所有的角色（Actor）都是Authority（权威的） 在客户端眼，除了自己控制的角色外，其他的所有角色都是Simulated proxy...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":5,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"网络同步RPC","slug":"网络同步RPC","count":1,"path":"api/tags/网络同步RPC.json"}],"author":{"name":"cBao","slug":"blog-author","avatar":"https://cbaoblog.oss-cn-shanghai.aliyuncs.com/HeadPortrait.jpg","link":"/","description":"但求日积月累，收获于细微。<br /><b>虚幻引擎开发</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}